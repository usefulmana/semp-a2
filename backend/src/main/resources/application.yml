
spring:
    datasource:
        url: jdbc:mariadb://76u62o.stackhero-network.com:3306/dev
        username: pi
        password: GAtech321
        driver-class-name: org.mariadb.jdbc.Driver
    jpa:
        show-sql: false
        hibernate:
            ddl-auto: update
            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
        properties:
            hibernate:
                dialect: org.hibernate.dialect.MariaDBDialect
    security:
      oauth2:
        client:
          registration:
            google:
              clientId: 997079004254-jfkhffpu96tp80eqe34kc6s2abtilqbe.apps.googleusercontent.com
              clientSecret: iF9wC25c_q7ArpfOe0RATm0k
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - profile
            facebook:
              clientId: 946210579080024
              clientSecret: 0701b82ad1fa1cb2ff461083b1ea19ad
              redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
              scope:
                - email
                - public_profile
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
    mail:
      host: smtp.gmail.com
      port: 587
      username: test.piot.314@gmail.com
      password: xwqftvkhiatgpiac
      properties:
        mail:
          smtp:
            auth: true
            connectiontimeout: 5000
            timeout: 5000
            writetimeout: 5000
            starttls:
              enable: true
              required: true
remote_host: https://bits-movie-backend.herokuapp.com
local_host: http://127.0.0.1:8080
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
debug: true